<?xml version="1.0"?>
<launch>
    <arg name="max_vel_x" default="0.55"/>
    <arg name="max_vel_theta" default="1.0"/>
    <arg name="xy_goal_tolerance" default="0.05"/>
    <arg name="yaw_goal_tolerance" default="0.05"/>
    <arg name="footprint" default="[[0.27, -0.27], [0.27, 0.27], [-0.27, 0.27], [-0.27, -0.27]]"/>
    <!-- <arg name="footprint" default="[[0.40, -0.33], [0.40, 0.33], [-0.40, 0.33], [-0.40, -0.33]]"/> -->
    <arg name="range_enabled" default="false"/>
    <arg name="range_topics" default="['/sonar_12oc', '/sonar_11oc', '/sonar_10oc', '/sonar_9oc', '/sonar_8oc', '/sonar_7oc', '/sonar_6oc', '/sonar_5oc', '/sonar_4oc', '/sonar_3oc', '/sonar_2oc', '/sonar_1oc']"/>

    <include file="$(find bringup)/launch/amcl.launch">
       <arg name="scan_topic" value="/scan_rectified" />
       <arg name="initial_pose_x" value="0.0"/>
       <arg name="initial_pose_y" value="0.0"/>
       <arg name="initial_pose_a" value="0.0"/>
    </include>
    <!-- <node name="amcl" pkg="amcl" type="amcl" output="screen">
        <remap from="scan" to="scan_rectified" />
        <rosparam>
            initial_pose_x: 0.0
            initial_pose_y: 0.0
            initial_pose_a: 0.0
            use_map_topic: false
            odom_model_type: diff
            tf_broadcast: true
        </rosparam>
    </node> -->

    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>

    <node name="move_base" pkg="move_base" type="move_base" output="screen">
        <rosparam>
            base_global_planner: "navfn/NavfnROS"
            base_local_planner: "dwa_local_planner/DWAPlannerROS" <!--"rsband_local_planner/RSBandPlannerROS"-->
            recovery_behaviors:
              - name: 'conservative_reset'
                type: 'clear_costmap_recovery/ClearCostmapRecovery'
              - name: 'aggressive_reset'
                type: 'clear_costmap_recovery/ClearCostmapRecovery'
#              - name: 'straf_reset'
#                type: 'straf_recovery/StrafRecovery'
            conservative_reset:
                reset_distance: 3.0
                layer_names: [obstacle_layer]
            aggressive_reset:
                reset_distance: 0.0
                layer_names: [obstacle_layer]
            straf_reset:
                timeout: 10
            controller_frequency: 10.0
            planner_patience: 5.0
            controller_patience: 15.0
            oscillation_timeout: 5.0
            planner_frequency: 0.0
            max_planning_retries: 0
            global_costmap:
                global_frame: map
                robot_base_frame: base_footprint
                update_frequency: 2.0
                publish_frequency: 0.5 #0.0
                static_map: true
                resolution: 0.05
                plugins:
                  - name: static_layer
                    type: "costmap_2d::StaticLayer"
                  - name: inflation_layer
                    type: "costmap_2d::InflationLayer"
                static_layer:
                    map_topic: /map_edit
                obstacle_layer:
                    observation_sources: scan_rectified #scan_left scan_right
                    scan_rectified:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 1.0
                        min_obstacle_height: -1.0
                        inf_is_valid: true
                    scan_left:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 2.0
                        min_obstacle_height: 0.05
                        inf_is_valid: true
                    scan_right:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 2.0
                        min_obstacle_height: 0.05
                        inf_is_valid: true
                    track_unknown_space: true
                    footprint_clearing_enabled: false
                    z_voxels: 8
                inflation_layer:
                    inflation_radius: 0.75
                footprint_topic: footprint_setup
            local_costmap:
                global_frame: odom
                robot_base_frame: base_footprint
                transform_tolerance: 0.2 #0.5
                update_frequency: 5.0
                publish_frequency: 2.0 #0.0
                static_map: false
                rolling_window: true
                width: 6.0
                height: 6.0
                resolution: 0.025
                plugins:
                  - name: obstacle_layer
                    type: "costmap_2d::ObstacleLayer"
                  - name: inflation_layer
                    type: "costmap_2d::InflationLayer"
                obstacle_layer:
                    observation_sources: scan_rectified #scan_left scan_right
                    scan_rectified:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 1.0
                        min_obstacle_height: -1.0
                        inf_is_valid: true
                    scan_left:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 2.0
                        min_obstacle_height: 0.05
                        inf_is_valid: true
                    scan_right:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 2.0
                        min_obstacle_height: 0.05
                        inf_is_valid: true
                    track_unknown_space: true
                    footprint_clearing_enabled: false
                    z_voxels: 8
                inflation_layer:
                    inflation_radius: 0.75
                footprint_topic: footprint_setup
            GlobalPlanner:
                allow_unknown: false
            NavfnROS:
                allow_unknown: false
            TrajectoryPlannerROS:
                acc_lim_x: 0.5
                acc_lim_y: 0.0
                acc_lim_theta: 3.2
                min_vel_x: 0.1
                min_in_place_vel_theta: 0.2
                escape_vel: -0.1
                holonomic_robot: false
                latch_xy_goal_tolerance: true
                meter_scoring: true
                occdist_scale: 0.5 #0.01
                heading_scoring: true
                dwa: true
                global_frame_id: odom
            DWAPlannerROS:
                acc_lim_x: 0.5
                acc_lim_y: 0.0
                acc_lim_th: 3.2
                min_trans_vel: 0.1
                min_vel_x: 0.0
                max_vel_y: 0.0
                min_vel_y: 0.0
                min_rot_vel: 0.2
                latch_xy_goal_tolerance: true
                occdist_scale: 0.0 #0.5
                vx_samples: 10
                vy_samples: 1
                vth_samples: 20
            TebLocalPlannerROS:
                acc_lim_x: 0.5
                acc_lim_theta: 3.2
                max_vel_x_backwards: 0.3 #0.2
                min_turning_radius: 0.001
                wheelbase: 1.555
                footprint_model:
                    type: "polygon"
                free_goal_vel: false
                viapoints_all_candidates: false #true
                odom_topic: /odometry/filtered
                map_frame: /map
        </rosparam>

        <param name="TrajectoryPlannerROS/max_vel_x" value="$(arg max_vel_x)"/>
        <param name="DWAPlannerROS/max_trans_vel" value="$(arg max_vel_x)"/>
        <param name="DWAPlannerROS/max_vel_x" value="$(arg max_vel_x)"/>
        <param name="TebLocalPlannerROS/max_vel_x" value="$(arg max_vel_x)"/>
        <param name="TrajectoryPlannerROS/max_vel_theta" value="$(arg max_vel_theta)"/>
        <param name="TrajectoryPlannerROS/min_vel_theta" value="-$(arg max_vel_theta)"/>
        <param name="DWAPlannerROS/max_rot_vel" value="$(arg max_vel_theta)"/>
        <param name="TebLocalPlannerROS/max_vel_theta" value="$(arg max_vel_theta)"/>
        <param name="TrajectoryPlannerROS/xy_goal_tolerance" value="$(arg xy_goal_tolerance)"/>
        <param name="DWAPlannerROS/xy_goal_tolerance" value="$(arg xy_goal_tolerance)"/>
        <param name="TebLocalPlannerROS/xy_goal_tolerance" value="$(arg xy_goal_tolerance)"/>
        <param name="TrajectoryPlannerROS/yaw_goal_tolerance" value="$(arg yaw_goal_tolerance)"/>
        <param name="DWAPlannerROS/yaw_goal_tolerance" value="$(arg yaw_goal_tolerance)"/>
        <param name="TebLocalPlannerROS/yaw_goal_tolerance" value="$(arg yaw_goal_tolerance)"/>
        <param name="global_costmap/footprint" value="$(arg footprint)"/>
        <param name="local_costmap/footprint" value="$(arg footprint)"/>
        <param name="TebLocalPlannerROS/footprint_model/vertices" value="$(arg footprint)"/>
        <rosparam if="$(arg range_enabled)">
            aggressive_reset:
                reset_distance: 0.0
                layer_names: [obstacle_layer, range_sensor_layer]
            global_costmap:
                plugins:
                  - name: static_layer
                    type: "costmap_2d::StaticLayer"
                  - name: obstacle_layer
                    type: "costmap_2d::ObstacleLayer"
                  - name: range_sensor_layer
                    type: "range_sensor_layer::RangeSensorLayer"
                  - name: inflation_layer
                    type: "costmap_2d::InflationLayer"
                range_sensor_layer:
                    mark_threshold: 0.6
                    clear_on_max_reading: true
            local_costmap:
                plugins:
                  - name: obstacle_layer
                    type: "costmap_2d::ObstacleLayer"
                  - name: range_sensor_layer
                    type: "range_sensor_layer::RangeSensorLayer"
                  - name: inflation_layer
                    type: "costmap_2d::InflationLayer"
                range_sensor_layer:
                    mark_threshold: 0.6
                    clear_on_max_reading: true
        </rosparam>
        <param name="global_costmap/range_sensor_layer/range_topics" value="$(arg range_topics)"/>
        <param name="local_costmap/range_sensor_layer/range_topics" value="$(arg range_topics)"/>
    </node>
</launch>
