//#line 2 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
// 
// File autogenerated for the bz_local_planner package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

#ifndef __bz_local_planner__BZPLANNERCONFIG_H__
#define __bz_local_planner__BZPLANNERCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace bz_local_planner
{
  class BZPlannerConfigStatics;
  
  class BZPlannerConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(BZPlannerConfig &config, const BZPlannerConfig &max, const BZPlannerConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const BZPlannerConfig &config1, const BZPlannerConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, BZPlannerConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const BZPlannerConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, BZPlannerConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const BZPlannerConfig &config) const = 0;
      virtual void getValue(const BZPlannerConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level, 
          std::string a_description, std::string a_edit_method, T BZPlannerConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (BZPlannerConfig::* field);

      virtual void clamp(BZPlannerConfig &config, const BZPlannerConfig &max, const BZPlannerConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const BZPlannerConfig &config1, const BZPlannerConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, BZPlannerConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const BZPlannerConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, BZPlannerConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const BZPlannerConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const BZPlannerConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, BZPlannerConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, BZPlannerConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<BZPlannerConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(BZPlannerConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("sim_time"==(*_i)->name){sim_time = boost::any_cast<double>(val);}
        if("sim_granularity"==(*_i)->name){sim_granularity = boost::any_cast<double>(val);}
        if("stop_time_buffer"==(*_i)->name){stop_time_buffer = boost::any_cast<double>(val);}
        if("bz_length_tolerance"==(*_i)->name){bz_length_tolerance = boost::any_cast<double>(val);}
        if("x_tolerance"==(*_i)->name){x_tolerance = boost::any_cast<double>(val);}
        if("y_tolerance"==(*_i)->name){y_tolerance = boost::any_cast<double>(val);}
        if("xy_tolerance"==(*_i)->name){xy_tolerance = boost::any_cast<double>(val);}
        if("yaw_tolerance"==(*_i)->name){yaw_tolerance = boost::any_cast<double>(val);}
        if("max_vel_x"==(*_i)->name){max_vel_x = boost::any_cast<double>(val);}
        if("min_vel_x"==(*_i)->name){min_vel_x = boost::any_cast<double>(val);}
        if("angular_ratio"==(*_i)->name){angular_ratio = boost::any_cast<double>(val);}
        if("vel_ratio"==(*_i)->name){vel_ratio = boost::any_cast<double>(val);}
        if("minimum_dist"==(*_i)->name){minimum_dist = boost::any_cast<double>(val);}
        if("wheel_base"==(*_i)->name){wheel_base = boost::any_cast<double>(val);}
        if("x_offset_pos"==(*_i)->name){x_offset_pos = boost::any_cast<double>(val);}
        if("x_offset_neg"==(*_i)->name){x_offset_neg = boost::any_cast<double>(val);}
        if("current_ctrl"==(*_i)->name){current_ctrl = boost::any_cast<double>(val);}
        if("goal_ctrl"==(*_i)->name){goal_ctrl = boost::any_cast<double>(val);}
        if("goal_reach_level"==(*_i)->name){goal_reach_level = boost::any_cast<int>(val);}
        if("convert_global"==(*_i)->name){convert_global = boost::any_cast<bool>(val);}
        if("relocation_pose_topic"==(*_i)->name){relocation_pose_topic = boost::any_cast<std::string>(val);}
        if("relocation_frame"==(*_i)->name){relocation_frame = boost::any_cast<std::string>(val);}
        if("local_frame_id"==(*_i)->name){local_frame_id = boost::any_cast<std::string>(val);}
        if("motion_status"==(*_i)->name){motion_status = boost::any_cast<int>(val);}
        if("test_vel"==(*_i)->name){test_vel = boost::any_cast<bool>(val);}
      }
    }

    double sim_time;
double sim_granularity;
double stop_time_buffer;
double bz_length_tolerance;
double x_tolerance;
double y_tolerance;
double xy_tolerance;
double yaw_tolerance;
double max_vel_x;
double min_vel_x;
double angular_ratio;
double vel_ratio;
double minimum_dist;
double wheel_base;
double x_offset_pos;
double x_offset_neg;
double current_ctrl;
double goal_ctrl;
int goal_reach_level;
bool convert_global;
std::string relocation_pose_topic;
std::string relocation_frame;
std::string local_frame_id;
int motion_status;
bool test_vel;

    bool state;
    std::string name;

    
}groups;



//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double sim_time;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double sim_granularity;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double stop_time_buffer;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double bz_length_tolerance;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double x_tolerance;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double y_tolerance;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double xy_tolerance;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_tolerance;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_vel_x;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_vel_x;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double angular_ratio;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double vel_ratio;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double minimum_dist;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double wheel_base;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double x_offset_pos;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double x_offset_neg;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double current_ctrl;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double goal_ctrl;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int goal_reach_level;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool convert_global;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string relocation_pose_topic;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string relocation_frame;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string local_frame_id;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int motion_status;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool test_vel;
//#line 218 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("BZPlannerConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const BZPlannerConfig &__max__ = __getMax__();
      const BZPlannerConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const BZPlannerConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const BZPlannerConfig &__getDefault__();
    static const BZPlannerConfig &__getMax__();
    static const BZPlannerConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const BZPlannerConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void BZPlannerConfig::ParamDescription<std::string>::clamp(BZPlannerConfig &config, const BZPlannerConfig &max, const BZPlannerConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class BZPlannerConfigStatics
  {
    friend class BZPlannerConfig;
    
    BZPlannerConfigStatics()
    {
BZPlannerConfig::GroupDescription<BZPlannerConfig::DEFAULT, BZPlannerConfig> Default("Default", "", 0, 0, true, &BZPlannerConfig::groups);
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sim_time = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sim_time = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sim_time = 1.7;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("sim_time", "double", 0, "The amount of time to roll trajectories out for in seconds", "", &BZPlannerConfig::sim_time)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("sim_time", "double", 0, "The amount of time to roll trajectories out for in seconds", "", &BZPlannerConfig::sim_time)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sim_granularity = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sim_granularity = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sim_granularity = 0.025;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("sim_granularity", "double", 0, "The granularity with which to check for collisions along each trajectory in meters", "", &BZPlannerConfig::sim_granularity)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("sim_granularity", "double", 0, "The granularity with which to check for collisions along each trajectory in meters", "", &BZPlannerConfig::sim_granularity)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.stop_time_buffer = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.stop_time_buffer = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.stop_time_buffer = 0.2;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("stop_time_buffer", "double", 0, "The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds", "", &BZPlannerConfig::stop_time_buffer)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("stop_time_buffer", "double", 0, "The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds", "", &BZPlannerConfig::stop_time_buffer)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.bz_length_tolerance = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.bz_length_tolerance = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.bz_length_tolerance = 0.02;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("bz_length_tolerance", "double", 0, "bezier curve length tolerance in meters", "", &BZPlannerConfig::bz_length_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("bz_length_tolerance", "double", 0, "bezier curve length tolerance in meters", "", &BZPlannerConfig::bz_length_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.x_tolerance = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.x_tolerance = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.x_tolerance = 0.05;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("x_tolerance", "double", 0, "x tolerance in meters", "", &BZPlannerConfig::x_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("x_tolerance", "double", 0, "x tolerance in meters", "", &BZPlannerConfig::x_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.y_tolerance = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.y_tolerance = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.y_tolerance = 0.05;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("y_tolerance", "double", 0, "y tolerance in meters", "", &BZPlannerConfig::y_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("y_tolerance", "double", 0, "y tolerance in meters", "", &BZPlannerConfig::y_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.xy_tolerance = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.xy_tolerance = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.xy_tolerance = 0.05;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("xy_tolerance", "double", 0, "Euclidean distance tolerance in meters", "", &BZPlannerConfig::xy_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("xy_tolerance", "double", 0, "Euclidean distance tolerance in meters", "", &BZPlannerConfig::xy_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_tolerance = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_tolerance = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_tolerance = 0.05;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("yaw_tolerance", "double", 0, "yaw tolerance in radius", "", &BZPlannerConfig::yaw_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("yaw_tolerance", "double", 0, "yaw tolerance in radius", "", &BZPlannerConfig::yaw_tolerance)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_vel_x = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_vel_x = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_vel_x = 0.3;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("max_vel_x", "double", 0, "Maximum of linear velocity", "", &BZPlannerConfig::max_vel_x)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("max_vel_x", "double", 0, "Maximum of linear velocity", "", &BZPlannerConfig::max_vel_x)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_vel_x = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_vel_x = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_vel_x = 0.15;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("min_vel_x", "double", 0, "The scale of linear velocity when robot is close enough to the goal", "", &BZPlannerConfig::min_vel_x)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("min_vel_x", "double", 0, "The scale of linear velocity when robot is close enough to the goal", "", &BZPlannerConfig::min_vel_x)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.angular_ratio = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.angular_ratio = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.angular_ratio = 3.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("angular_ratio", "double", 0, "Linear ratio of angular velocity w.r.t the change of yaw", "", &BZPlannerConfig::angular_ratio)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("angular_ratio", "double", 0, "Linear ratio of angular velocity w.r.t the change of yaw", "", &BZPlannerConfig::angular_ratio)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.vel_ratio = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.vel_ratio = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.vel_ratio = 0.1;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("vel_ratio", "double", 0, "Linear ratio of cmd_vel", "", &BZPlannerConfig::vel_ratio)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("vel_ratio", "double", 0, "Linear ratio of cmd_vel", "", &BZPlannerConfig::vel_ratio)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.minimum_dist = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.minimum_dist = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.minimum_dist = 0.1;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("minimum_dist", "double", 0, "The minimum judging distance for final goal", "", &BZPlannerConfig::minimum_dist)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("minimum_dist", "double", 0, "The minimum judging distance for final goal", "", &BZPlannerConfig::minimum_dist)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.wheel_base = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.wheel_base = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.wheel_base = 1.55;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("wheel_base", "double", 0, "Magnitidude of wheelbase", "", &BZPlannerConfig::wheel_base)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("wheel_base", "double", 0, "Magnitidude of wheelbase", "", &BZPlannerConfig::wheel_base)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.x_offset_pos = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.x_offset_pos = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.x_offset_pos = 1.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("x_offset_pos", "double", 0, "The positive offset of goal on the x axis", "", &BZPlannerConfig::x_offset_pos)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("x_offset_pos", "double", 0, "The positive offset of goal on the x axis", "", &BZPlannerConfig::x_offset_pos)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.x_offset_neg = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.x_offset_neg = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.x_offset_neg = 1.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("x_offset_neg", "double", 0, "The negative offset of goal on the x axis", "", &BZPlannerConfig::x_offset_neg)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("x_offset_neg", "double", 0, "The negative offset of goal on the x axis", "", &BZPlannerConfig::x_offset_neg)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.current_ctrl = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.current_ctrl = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.current_ctrl = 0.3;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("current_ctrl", "double", 0, "The contol point for the current pose", "", &BZPlannerConfig::current_ctrl)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("current_ctrl", "double", 0, "The contol point for the current pose", "", &BZPlannerConfig::current_ctrl)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.goal_ctrl = 0.0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.goal_ctrl = std::numeric_limits<double>::infinity();
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.goal_ctrl = 0.5;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("goal_ctrl", "double", 0, "The contol point for the goal point", "", &BZPlannerConfig::goal_ctrl)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<double>("goal_ctrl", "double", 0, "The contol point for the goal point", "", &BZPlannerConfig::goal_ctrl)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.goal_reach_level = 0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.goal_reach_level = 4;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.goal_reach_level = 3;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<int>("goal_reach_level", "int", 0, "goal reach level", "", &BZPlannerConfig::goal_reach_level)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<int>("goal_reach_level", "int", 0, "goal reach level", "", &BZPlannerConfig::goal_reach_level)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.convert_global = 0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.convert_global = 1;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.convert_global = 0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<bool>("convert_global", "bool", 0, "To convert global plan into local plan or not", "", &BZPlannerConfig::convert_global)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<bool>("convert_global", "bool", 0, "To convert global plan into local plan or not", "", &BZPlannerConfig::convert_global)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.relocation_pose_topic = "";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.relocation_pose_topic = "";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.relocation_pose_topic = "target_mark";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<std::string>("relocation_pose_topic", "str", 0, "The name of the relocating frame of reference ", "", &BZPlannerConfig::relocation_pose_topic)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<std::string>("relocation_pose_topic", "str", 0, "The name of the relocating frame of reference ", "", &BZPlannerConfig::relocation_pose_topic)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.relocation_frame = "";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.relocation_frame = "";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.relocation_frame = "map";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<std::string>("relocation_frame", "str", 0, "The name of the relocating frame of reference ", "", &BZPlannerConfig::relocation_frame)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<std::string>("relocation_frame", "str", 0, "The name of the relocating frame of reference ", "", &BZPlannerConfig::relocation_frame)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.local_frame_id = "";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.local_frame_id = "";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.local_frame_id = "base_shelf";
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<std::string>("local_frame_id", "str", 0, "The name of the relocating frame of reference ", "", &BZPlannerConfig::local_frame_id)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<std::string>("local_frame_id", "str", 0, "The name of the relocating frame of reference ", "", &BZPlannerConfig::local_frame_id)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.motion_status = 0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.motion_status = 1;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.motion_status = 0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<int>("motion_status", "int", 0, "A motion status parameter which is edited via an enum", "{'enum_description': 'An enum to set motion status', 'enum': [{'srcline': 9, 'description': 'Motion in relocation mode', 'srcfile': '/home/ouiyeah/catkin_ws/src/navigation-jade-devel/bz_local_planner/cfg/BZPlanner.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'RELOCATION'}, {'srcline': 10, 'description': 'Motion in navigation mode', 'srcfile': '/home/ouiyeah/catkin_ws/src/navigation-jade-devel/bz_local_planner/cfg/BZPlanner.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NAVIGATION'}]}", &BZPlannerConfig::motion_status)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<int>("motion_status", "int", 0, "A motion status parameter which is edited via an enum", "{'enum_description': 'An enum to set motion status', 'enum': [{'srcline': 9, 'description': 'Motion in relocation mode', 'srcfile': '/home/ouiyeah/catkin_ws/src/navigation-jade-devel/bz_local_planner/cfg/BZPlanner.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'RELOCATION'}, {'srcline': 10, 'description': 'Motion in navigation mode', 'srcfile': '/home/ouiyeah/catkin_ws/src/navigation-jade-devel/bz_local_planner/cfg/BZPlanner.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NAVIGATION'}]}", &BZPlannerConfig::motion_status)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.test_vel = 0;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.test_vel = 1;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.test_vel = 1;
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<bool>("test_vel", "bool", 0, "To convert global plan into local plan or not", "", &BZPlannerConfig::test_vel)));
//#line 293 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(BZPlannerConfig::AbstractParamDescriptionConstPtr(new BZPlannerConfig::ParamDescription<bool>("test_vel", "bool", 0, "To convert global plan into local plan or not", "", &BZPlannerConfig::test_vel)));
//#line 246 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(BZPlannerConfig::AbstractGroupDescriptionConstPtr(new BZPlannerConfig::GroupDescription<BZPlannerConfig::DEFAULT, BZPlannerConfig>(Default)));
//#line 356 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<BZPlannerConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<BZPlannerConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<BZPlannerConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    BZPlannerConfig __max__;
    BZPlannerConfig __min__;
    BZPlannerConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const BZPlannerConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static BZPlannerConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &BZPlannerConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const BZPlannerConfig &BZPlannerConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const BZPlannerConfig &BZPlannerConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const BZPlannerConfig &BZPlannerConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<BZPlannerConfig::AbstractParamDescriptionConstPtr> &BZPlannerConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<BZPlannerConfig::AbstractGroupDescriptionConstPtr> &BZPlannerConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const BZPlannerConfigStatics *BZPlannerConfig::__get_statics__()
  {
    const static BZPlannerConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = BZPlannerConfigStatics::get_instance();
    
    return statics;
  }

//#line 9 "/home/ouiyeah/catkin_ws/src/navigation-jade-devel/bz_local_planner/cfg/BZPlanner.cfg"
      const int BZPlanner_RELOCATION = 0;
//#line 10 "/home/ouiyeah/catkin_ws/src/navigation-jade-devel/bz_local_planner/cfg/BZPlanner.cfg"
      const int BZPlanner_NAVIGATION = 1;
}

#endif // __BZPLANNERRECONFIGURATOR_H__
